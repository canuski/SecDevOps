name: Python Application Security Scans

on:
  push:
    branches: ["main", "dev"]
  pull_request:
    branches: ["main", "dev"]
  schedule:
    - cron: "0 0 * * 0"  # Wekelijkse scan op zondag om middernacht

permissions:
  contents: read
  security-events: write  # Vereist voor SAST-checks en kwetsbaarheidsanalyse

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      # Stap 1: Check out de repository
      - uses: actions/checkout@v4

      # Stap 2: Stel Python in
      - name: Set up Python 3.10
        uses: actions/setup-python@v3
        with:
          python-version: "3.10"

      # Stap 3: Installeer de dependencies (flake8, bandit, safety, detect-secrets)
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install flake8 bandit safety detect-secrets
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi

      # Stap 4: Linten van de code met flake8
      - name: Lint with flake8
        run: |
          flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
          flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics

      # Stap 5: Voer de Bandit SAST-scan uit
      - name: Running Bandit for SAST checks...
        run: |
          echo "Running Bandit for SAST checks..."
          bandit -r . -ll || true  # Bandit retourneert 0 bij geen problemen, maar kan nog steeds fouten detecteren

      # Stap 6: Voer de Safety scan uit voor kwetsbaarheden in dependencies
      - name: Dependency Vulnerability Check
        id: deps
        run: |
          echo "Running safety scan for dependency vulnerabilities..."
          safety scan --full-report > safety_output.txt || true  # Zorg ervoor dat Safety altijd uitvoert

      # Stap 7: Controleer de output van de Safety scan en blokkeer de PR indien nodig
      - name: Check for vulnerabilities and block PR if found
        if: success()  # Als de Safety scan succesvol was
        run: |
          if grep -q "Vulnerabilities found" safety_output.txt; then
            echo "❌ Safety scan found vulnerabilities! Blocking the PR."
            cat safety_output.txt
            exit 1  # Stop de workflow en blokkeer de PR
          else
            echo "✅ No vulnerabilities found by Safety scan."
          fi

      # Stap 8: Voer detect-secrets uit om te scannen op geheime sleutels
      - name: Secret detection
        run: |
          echo "Running detect-secrets scan..."
          detect-secrets scan > .secrets.baseline || echo "Secrets scan failed"
          detect-secrets audit .secrets.baseline || echo "No secrets found"
